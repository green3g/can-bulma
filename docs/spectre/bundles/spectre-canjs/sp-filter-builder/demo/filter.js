define("spectre-canjs@2.3.0#sp-filter-builder/Filter",["exports","can-define/map/map","can-define/list/list","../util/field/Field","../util/string/string","can-define","can-stache"],function(e,t,a,r,n,s,i){"use strict";function l(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(e,"__esModule",{value:!0}),e.FilterList=e.Filter=e.FilterOptions=void 0;var o=l(t),p=l(a),d=l(r),c=l(s),u=l(i),f=e.FilterOptions=[{label:"Contains",value:"like",types:["string"]},{label:"Does not contain",value:"not_like",types:["string"]},{label:"Starts with",value:"starts_with",types:["string"]},{label:"Ends with",value:"ends_with",types:["string"]},{label:"Equal to",value:"equals"},{label:"Not equal to",operator:"not_equal_to",value:"not_equal_to"},{label:"Greater Than",value:"greater_than",types:["number"]},{label:"Less Than",value:"less_than",types:["number"]},{label:"Before",value:"before",types:["date"],valueField:{name:"value",alias:"Value",ui:"datepicker",properties:{placeholder:"Select a date"}}},{label:"After",value:"after",types:["date"],valueField:{name:"value",alias:"Value",ui:"datepicker",properties:{placeholder:"Select a date"}}}],g=e.Filter=o.default.extend("Filter",{value:{type:function(e){var t=this.valueField&&this.valueField.type?this.valueField.type:"*";return c.default.types[t](e)}},name:{type:"string",get:function(e){return this.field?this.field.name:e},serialize:function(e){return e}},operator:{type:"string",get:function(e){return void 0===e?this.operatorField.value:e},serialize:function(e){return e}},operatorField:{serialize:!1,get:function(e){var t=this.field,a=t?f.filter(function(e){return!t.type||"observable"===t.type||!e.types||e.types.indexOf(t.type)>-1}):f;return new d.default(Object.assign({name:"operator",value:a[0].value,alias:"is",inline:!0,placeholder:"Choose an operator",editTag:"sp-select-field",options:a},e||{}))}},visible:{type:"boolean",value:!0,serialize:!1,set:function(e){return e}},pinned:{type:"boolean",value:!1,serialize:!1},alias:{get:function(){return this.field?this.field.alias:(0,n.makeSentenceCase)(this.name)},serialize:!1},valueField:{serialize:!1,get:function(){var e=this.field?Object.assign({editTag:"sp-text-field"},this.field.get(),{inline:!0,textarea:!1}):{inline:!0,name:this.name,alias:"Value",editTag:"sp-text-field",placeholder:"Enter a filter value"};return new d.default(e)}},valueComponent:{type:"*",get:function(e){return"function"==typeof e?e:(0,u.default)("<"+this.valueField.editTag+' \n                properties:from="valueField" \n                value:bind="value" />')}},field:{Type:d.default,serialize:!1},object:{serialize:!1,get:function(){var e={};return e[this.name]=this.value,e}},setField:function(e,t,a,r){this.value=r.value}});e.FilterList=p.default.extend("FilterList",{"#":g})}),define("spectre-canjs@2.3.0#sp-filter-builder/ViewModel",["exports","../util/field/base/FieldIteratorMap","../util/string/string","./Filter"],function(e,t,a,r){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=function(e){return e&&e.__esModule?e:{default:e}}(t).default.extend("FilterWidget",{disableCreate:"htmlbool",excludeFieldKey:{default:"filter"},filters:{Type:r.FilterList,Default:r.FilterList},nameField:{get:function(){return this.fieldOptions.length?{formatter:a.makeSentenceCase,name:"name",alias:"Field Name",fieldType:"select",options:this.fieldOptions,defaultLabel:"Add a filter",inline:!0}:{name:"name",alias:"Field Name",placeholder:"Enter fieldname"}}},fieldOptions:{get:function(){return this.fields.length?this.fields.map(function(e){return{value:e.name,label:e.alias}}):[]}},fieldValue:{type:"string",default:"_"},removeFilter:function(e){var t=this.filters.indexOf(e);this.filters.splice(t,1)},removeFilters:function(){this.filters.replace([])},addFilter:function(){var e=this.fieldValue;if(!e||""===e)return!1;var t=void 0;this.fields.length&&(t=this.fields.filter(function(t){return t.name===e})[0]);var a=new r.Filter({field:t,name:e});return this.filters.push(a),this.fieldValue="",!1}});e.default=n}),define("spectre-canjs@2.3.0#sp-filter-builder/template.stache!steal-stache@4.1.0#steal-stache",["module","can-stache","can-stache/src/mustache_core","can-view-import@4.0.2#can-view-import","can-stache-bindings@4.1.0#can-stache-bindings"],function(e,t,a){var r=t("sp-filter-builder/template.stache",[{tokenType:"start",args:["div",!1,1]},{tokenType:"attrStart",args:["class",1]},{tokenType:"attrValue",args:["sp-filter-builder container-fluid",1]},{tokenType:"attrEnd",args:["class",1]},{tokenType:"end",args:["div",!1,1]},{tokenType:"chars",args:[" ",1]},{tokenType:"special",args:["#each(filters)",1]},{tokenType:"chars",args:["\r\n    ",1]},{tokenType:"special",args:["#if(visible)",2]},{tokenType:"chars",args:["\r\n      ",2]},{tokenType:"start",args:["sp-filter",!0,3]},{tokenType:"attrStart",args:["filter:from",3]},{tokenType:"attrValue",args:[".",3]},{tokenType:"attrEnd",args:["filter:from",3]},{tokenType:"attrStart",args:["on:remove",3]},{tokenType:"attrValue",args:["scope.root.removeFilter(.)",3]},{tokenType:"attrEnd",args:["on:remove",3]},{tokenType:"end",args:["sp-filter",!0,3]},{tokenType:"chars",args:["\r\n    ",3]},{tokenType:"special",args:["/if",4]},{tokenType:"chars",args:["\r\n  ",4]},{tokenType:"special",args:["/each",5]},{tokenType:"chars",args:["\r\n\r\n  ",5]},{tokenType:"start",args:["br",!0,7]},{tokenType:"end",args:["br",!0,7]},{tokenType:"chars",args:["\r\n\r\n  ",7]},{tokenType:"special",args:["#unless(disableCreate)",9]},{tokenType:"chars",args:["\r\n    ",9]},{tokenType:"start",args:["sp-select-field",!0,10]},{tokenType:"attrStart",args:["properties:from",10]},{tokenType:"attrValue",args:["nameField",10]},{tokenType:"attrEnd",args:["properties:from",10]},{tokenType:"attrStart",args:["on:fieldchange",10]},{tokenType:"attrValue",args:["addFilter(scope.arguments)",10]},{tokenType:"attrEnd",args:["on:fieldchange",10]},{tokenType:"attrStart",args:["value:bind",10]},{tokenType:"attrValue",args:["fieldValue",10]},{tokenType:"attrEnd",args:["value:bind",10]},{tokenType:"attrStart",args:["inline:from",10]},{tokenType:"attrValue",args:["true",10]},{tokenType:"attrEnd",args:["inline:from",10]},{tokenType:"end",args:["sp-select-field",!0,10]},{tokenType:"chars",args:["\r\n  ",10]},{tokenType:"special",args:["/unless",11]},{tokenType:"chars",args:["\r\n\n\r\n",11]},{tokenType:"close",args:["div",14]},{tokenType:"done",args:[14]}]);return function(t,a,n){var s=Object.assign({module:e},a);return r(t,s,n)}}),define("spectre-canjs@2.3.0#sp-filter/ViewModel",["exports","can-define/map/map","../sp-filter-builder/Filter"],function(e,t,a){"use strict";function r(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(e,"__esModule",{value:!0});var n=r(t),s=r(a);e.default=n.default.extend("SPFilter",{filter:s.default,noOp:function(e){return e.preventDefault(),!1},dispatchEvent:function(e){this.dispatch(e,[this.filter])}})}),define("spectre-canjs@2.3.0#sp-filter/template.stache!steal-stache@4.1.0#steal-stache",["module","can-stache","can-stache/src/mustache_core","can-view-import@4.0.2#can-view-import","can-stache-bindings@4.1.0#can-stache-bindings"],function(e,t,a){var r=t("sp-filter/template.stache",[{tokenType:"special",args:["#with(filter)",1]},{tokenType:"chars",args:["\r\n",1]},{tokenType:"start",args:["div",!1,2]},{tokenType:"attrStart",args:["class",2]},{tokenType:"attrValue",args:["clearfix pt-10",2]},{tokenType:"attrEnd",args:["class",2]},{tokenType:"end",args:["div",!1,2]},{tokenType:"chars",args:["\r\n  ",2]},{tokenType:"start",args:["form",!1,3]},{tokenType:"attrStart",args:["class",3]},{tokenType:"attrValue",args:["form",3]},{tokenType:"attrEnd",args:["class",3]},{tokenType:"attrStart",args:["on:submit",3]},{tokenType:"attrValue",args:["scope.root.noOp(scope.event)",3]},{tokenType:"attrEnd",args:["on:submit",3]},{tokenType:"end",args:["form",!1,3]},{tokenType:"chars",args:["\r\n    ",3]},{tokenType:"special",args:["#if pinned",4]},{tokenType:"chars",args:["\r\n    ",4]},{tokenType:"start",args:["span",!1,5]},{tokenType:"attrStart",args:["class",5]},{tokenType:"attrValue",args:["filter-fixed",5]},{tokenType:"attrEnd",args:["class",5]},{tokenType:"end",args:["span",!1,5]},{tokenType:"special",args:["alias",5]},{tokenType:"chars",args:[" ",5]},{tokenType:"special",args:["operatorField.alias",5]},{tokenType:"close",args:["span",5]},{tokenType:"chars",args:["\r\n    ",5]},{tokenType:"special",args:["else",6]},{tokenType:"chars",args:["\r\n    ",6]},{tokenType:"start",args:["button",!1,7]},{tokenType:"attrStart",args:["type",7]},{tokenType:"attrValue",args:["button",7]},{tokenType:"attrEnd",args:["type",7]},{tokenType:"attrStart",args:["class",7]},{tokenType:"attrValue",args:["btn block float-left",7]},{tokenType:"attrEnd",args:["class",7]},{tokenType:"attrStart",args:["on:click",7]},{tokenType:"attrValue",args:["scope.root.dispatchEvent('remove')",7]},{tokenType:"attrEnd",args:["on:click",7]},{tokenType:"end",args:["button",!1,7]},{tokenType:"chars",args:["\r\n      ",7]},{tokenType:"start",args:["i",!1,8]},{tokenType:"attrStart",args:["class",8]},{tokenType:"attrValue",args:["fa fa-trash",8]},{tokenType:"attrEnd",args:["class",8]},{tokenType:"end",args:["i",!1,8]},{tokenType:"close",args:["i",8]},{tokenType:"chars",args:[" ",8]},{tokenType:"special",args:["alias",8]},{tokenType:"close",args:["button",8]},{tokenType:"chars",args:["\r\n    ",8]},{tokenType:"start",args:["sp-select-field",!0,9]},{tokenType:"attrStart",args:["class",9]},{tokenType:"attrValue",args:["float-left",9]},{tokenType:"attrEnd",args:["class",9]},{tokenType:"attrStart",args:["properties:from",9]},{tokenType:"attrValue",args:["operatorField",9]},{tokenType:"attrEnd",args:["properties:from",9]},{tokenType:"attrStart",args:["value:bind",9]},{tokenType:"attrValue",args:["operator",9]},{tokenType:"attrEnd",args:["value:bind",9]},{tokenType:"attrStart",args:["inline:from",9]},{tokenType:"attrValue",args:["true",9]},{tokenType:"attrEnd",args:["inline:from",9]},{tokenType:"end",args:["sp-select-field",!0,9]},{tokenType:"chars",args:[" ",9]},{tokenType:"special",args:["/if",9]},{tokenType:"chars",args:["\r\n    ",9]},{tokenType:"start",args:["div",!1,10]},{tokenType:"attrStart",args:["class",10]},{tokenType:"attrValue",args:["d-inline-block",10]},{tokenType:"attrEnd",args:["class",10]},{tokenType:"end",args:["div",!1,10]},{tokenType:"chars",args:["\r\n      ",10]},{tokenType:"special",args:[">valueComponent",11]},{tokenType:"chars",args:["\r\n    ",11]},{tokenType:"close",args:["div",12]},{tokenType:"chars",args:["\r\n  ",12]},{tokenType:"close",args:["form",13]},{tokenType:"chars",args:["\r\n",13]},{tokenType:"close",args:["div",14]},{tokenType:"chars",args:["\r\n",14]},{tokenType:"special",args:["/with",15]},{tokenType:"done",args:[15]}]);return function(t,a,n){var s=Object.assign({module:e},a);return r(t,s,n)}}),define("spectre-canjs@2.3.0#sp-filter/sp-filter",["exports","can-component","./ViewModel","./template.stache"],function(e,t,a,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(e,"__esModule",{value:!0});var s=n(t),i=n(a),l=n(r);e.default=s.default.extend({tag:"sp-filter",ViewModel:i.default,view:l.default})}),define("spectre-canjs@2.3.0#sp-filter-builder/sp-filter-builder",["exports","can-component","./ViewModel","./template.stache","./sp-filter-builder.less","../sp-list-table/sp-list-table","../sp-form/sp-form","../sp-filter/sp-filter","../sp-form/fields/sp-text-field/sp-text-field","../sp-form/fields/sp-select-field/sp-select-field"],function(e,t,a,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(e,"__esModule",{value:!0});var s=n(t),i=n(a),l=n(r);e.default=s.default.extend({tag:"sp-filter-builder",ViewModel:i.default,view:l.default})}),define("spectre-canjs@2.3.0#sp-filter-builder/demo/filter",["can-stache","spectre-canjs/util/field/parseFieldArray/parseFieldArray","can-define/map/map","json-pretty-html","spectre-canjs/sp-filter-builder/sp-filter-builder","../../sp-form/demo/full/full.less","spectre-canjs/sp-form/fields/sp-check-field/sp-check-field"],function(e,t,a,r){"use strict";function n(e){return e&&e.__esModule?e:{default:e}}var s=n(e),i=(n(t),n(a),n(r)),l=s.default.from("demo-html");document.body.appendChild(l({filters:null,fields:[{name:"field_1",type:"number",textType:"number"},"field_2",{name:"field_3",editTag:"sp-check-field",type:"boolean"},{filter:!1,name:"excluded"}],disableCreate:!1,stringify:function(e){return e&&e.get("length"),(0,i.default)(e.get())},toggleAdd:function(){this.disableCreate=!this.disableCreate},pin:function(e){e.forEach(function(e){e.pinned=!e.pinned})},hide:function(e){e.forEach(function(e){e.visible=!e.visible})}})),window.DEMO_SOURCE="\nimport 'sp-filter-builder/';\nimport stache from 'can-stache';\nimport {parseFieldArray} from '~/util/field/field';\nimport DefineMap from 'can-define/map/map';\n\nconst render = stache.from('demo-html');\ndocument.body.appendChild(render(new DefineMap({\n    fields: parseFieldArray(['field_1', 'field_2', 'field_3']),\n    disableCreate: false,\n    stringify (data) {\n        return JSON.stringify(data.serialize());\n    },\n    toggleAdd () {\n        this.disableCreate = !this.disableCreate;\n    }\n})));\n"});
//# sourceMappingURL=filter.js.map