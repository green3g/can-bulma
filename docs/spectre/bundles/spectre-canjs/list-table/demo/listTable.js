/*spectre-canjs@0.28.4#list-table/demo/listTable*/
define("spectre-canjs@0.28.4#list-table/demo/listTable",["can-stache","can-define/list/list","spectre-canjs/list-table/list-table"],function(e,n){"use strict";function a(e){return e&&e.__esModule?e:{default:e}}var o=a(e),t=a(n),i=(0,o.default)(document.getElementById("demo-html").innerHTML);document.body.appendChild(i({primary:[{iconClass:"fa fa-sad-o",text:"Say Goodbye",eventName:"goodbye"}],buttons:[{iconClass:"fa fa-smile-o",eventName:"hello",text:"Say Hello"}],fields:["name","favorite_food",{name:"age",formatter:function(e,n){return n.name+" is "+e+" years old"}}],data:new t.default([{name:"Peter",age:16,favorite_food:"Pizza"},{name:"Phillip",age:26,favorite_food:"Pizza"},{name:"Todd",age:150,favorite_food:"Ice Cream"},{name:"Andy",age:10,favorite_food:"Pickles"},{name:"Andrew",age:24,favorite_food:"Spaghetti"}]),sayHello:function(e,n,a,o){alert(o.name+" says hello!")},sayGoodbye:function(e,n,a,o){alert(o.name+" says goodbye!")},setSort:function(e,n,a,o){var t=o.fieldName;this.data.sort(function(e,n){return"asc"===o.type?e[t]===n[t]?0:e[t]>n[t]?1:-1:e[t]===n[t]?0:e[t]>n[t]?-1:1})}})),window.DEMO_SOURCE="\nimport 'spectre-canjs/list-table/list-table';\nimport stache from 'can-stache';\nimport DefineList from 'can-define/list/list';\n\nvar render = stache(document.getElementById('demo-html').innerHTML);\n\ndocument.body.appendChild(render({\n    primary: [{\n      iconClass: 'fa fa-sad-o',\n      text: 'Say Goodbye',\n      eventName: 'goodbye'\n    }],\n    buttons: [{\n        iconClass: 'fa fa-smile-o',\n        eventName: 'hello',\n        text: 'Say Hello'\n    }],\n    fields: ['name', 'favorite_food', {\n      name: 'age',\n      formatter(val, obj){\n        return `${obj.name} is ${val} years old`\n      }\n    }],\n    // observable list enables sorting\n    data: new DefineList([{\n        name: 'Peter',\n        age: 16,\n        favorite_food: 'Pizza'\n    }, {\n        name: 'Phillip',\n        age: 26,\n        favorite_food: 'Pizza'\n    }, {\n        name: 'Todd',\n        age: 150,\n        favorite_food: 'Ice Cream'\n    }, {\n        name: 'Andy',\n        age: 10,\n        favorite_food: 'Pickles'\n    }, {\n        name: 'Andrew',\n        age: 24,\n        favorite_food: 'Spaghetti'\n    }]),\n    sayHello (a, b, c, obj) {\n        alert(obj.name + ' says hello!');\n    },\n    sayGoodbye (a, b, c, obj) {\n        alert(obj.name + ' says goodbye!');\n    },\n    // sorts the observable list\n    setSort (a, b, c, sortInfo) {\n        const field = sortInfo.fieldName;\n        this.data.sort((a, b) => {\n            return sortInfo.type === 'asc'\n                //if ascending\n                ? (a[field] === b[field] ? 0\n                    : a[field] > b[field] ? 1 : -1)\n                //if descending\n                : (a[field] === b[field] ? 0\n                    : a[field] > b[field] ? -1 : 1);\n        });\n    }\n}));\n\n"});
//# sourceMappingURL=listTable.js.map